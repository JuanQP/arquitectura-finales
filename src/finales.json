{
    "finales": [
        {
            "descripcion": "Final 01/12/2016",
            "secciones": [
                {
                    "descripcion": "Teórico",
                    "enunciados": [
                        {
							"enRevision": false,
							"pregunta": "¿Desde qué lugar se extraen los valores que permiten la restauración de los registros de CPU para una tarea entrante?",
                            "respuesta": "Estructura de Datos de Pila<br>Pila<br>Stack"
                        },
                        {
                            "enRevision": false,
							"pregunta": "Nombre dos registros de CPU que se utilicen en el campo desplazamiento de una dirección virtual.",
                            "respuesta": "Las instrucciones <samp>EIP</samp> y <samp>ESP</samp>",
                            "explicacion": "Recordemos que son los <strong>punteros</strong> (esa palabra debería darnos una pista de que sirven para hacer desplazamientos) de instrución, y el puntero de stack."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cuál es la finalidad de los registros 'SI' y 'DI' en modo real?",
                            "respuesta": "Se utilizan en direccionamiento indexado.<br>Sirven para trabajar con cadenas de caracteres."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿A qué hace referencia el concepto MODO directo por registro o de registro?",
                            "respuesta": "Es el modo de direccionamiento en el cual el operando (<em>el valor que se pasa a una instrucción</em>) se aloja en un registro de la CPU.",
                            "explicacion": "Cuando usamos por ejemplo <samp>MOV AX, BX</samp>, estamos utilizando datos de <samp>BX</samp> que se encuentran en un registro, se diferencia del direccionamiento directo 'común' en el hecho de que en nuestro caso usamos registros, los cuales son muchísimo más rápido de acceder que a los que se encuentran en memoria principal."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Si el campo EDATA de una instrucción de 32 bits aloja un dato (modo inmediato) ¿Cuál es su valor máximo entero? Escríbalo en hexadecimal o en potencias de 2.",
                            "respuesta": "2^(Cantidad de bits - 1) entonces 2^(32) - 1",
                            "explicacion": "Nos está diciendo que el campo tiene 32 bits y que tiene el valor en la instrucción misma (modo inmediato). Entonces simplemente tenemos que responder cuál es el valor máximo que se puede lograr con 32 bits o sea <samp>FF FF FF FF</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Qué es un hercio o Hz?",
                            "respuesta": "Es una medida de frecuencia, representa los <strong>ciclos por segundo</strong> de un CPU."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Cómo se denomina la señal que indica la solicitud de atención por parte de un dispositivo externo?",
                            "respuesta": "La señal <samp>INTR</samp>.",
                            "explicacion": "No confundir con <samp>INTO</samp>, o <samp>INT n</samp> que son instrucciones de interrupción que puede activar un programador."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cómo clasificaría una interrupción producida por una división por cero?",
                            "respuesta": "Excepción."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Sabiendo que la dirección física de la última posición de una memoria es <samp>FF FF FF FF</samp><br>¿Cuál es el valor de <samp>m</samp> de esa memoria si es direccionable al octeto? (O dicho de otra manera de m X 8)",
                            "respuesta": "m = 4G de posiciones"
                        },
                        {
                            "enRevision": false,
							"pregunta": "Indique el correspondiente rango de direcciones.",
                            "respuesta": "[0, 2^{32}-1]",
                            "explicacion": "Desde qué número a qué número pueden ser esas posiciones."
                        }
                    ]
                },
                {
                    "descripcion": "Práctica",
                    "enunciados": [
                        {
                            "enRevision": false,
							"pregunta": "Para la línea de código presentada a continuación y considerando un contexto en modo real (o modo 16 bits)<br><samp>3BB0:0103 MOV AX, [35B0]</samp><br>Si el valor del DS es <samp>AB55</samp>, ¿Cuál es la dirección física del operando involucrado en ésta instrucción?",
                            "respuesta": "AEB00",
                            "explicacion": "Recordar que la expresión <samp>[35B0]</samp> significa 'el contenido de la posición...', y como acá dice que la posición de <samp>DS</samp> es <samp>AB55</samp>, hay que aplicar la formulita para obtener la dirección física (la dirección lógica sería <samp>AB55:35B0</samp>, y la física es la que resulta de aplicar <samp>(AB55 x 10) + 35B0</samp>, con lo cual al multiplicar tendríamos <samp>AB550 + 35B0</samp> y finalmente <samp>AEB00</samp>)."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Si el valor del <samp>SS</samp> es <samp>3700</samp> y el valor del <samp>SP</samp> es <samp>FFFE</samp>, ¿Cuál será la dirección segmentada asociada al byte vacío de la pila luego de una instrucción <samp>PUSH</samp>?",
                            "respuesta": "<samp>3700:FFFC</samp>",
                            "explicacion": "Previo al <samp>PUSH</samp> tenemos que la dirección segmentada a la que apunta la pila es <samp>SS:SP</samp> (Segmento de Pila : Puntero de Pila), o sea <samp>3700:FFFE</samp>. Hay que recordar que cuando hacemos <samp>PUSH</samp> el puntero <strong>decrementa</strong> (si, una locura), y cuando hacemos <samp>POP</samp> el puntero <strong>incrementa</strong>. Estas variaciones las hace de a 2 bytes. Así que el puntero que ahora vale <samp>FFFE</samp>, luego de un <samp>PUSH</samp> decrementaría 2 bytes hasta valer <samp>FFFC</samp>. Entonces, ya podemos mostrar la dirección segmentada <samp>SS:SP</samp> que sería <samp>3700:FFFC</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Si la instrucción siguiente a la descripta se aloja en la dirección física <samp>3BC07</samp>, ¿Cuál es el tamaño de la instrucción y cuántos bytes le corresponden al código de operación?",
                            "respuesta": "4 bytes de instrucción, en los que 2bytes de código de operación y 2 bytes del campo de referencia al dato <samp>35B0</samp>",
                            "explicacion": "Primero deberíamos ver cuál es la dirección física de dicha instrucción, la cual sabiendo que tenemos <samp>3BB0:0103</samp>, obtenemos que es <samp>3BB0 x 10 + 0103 = 3BC03</samp>. Como la pregunta dice que la próxima instrucción está en <samp>3BC07</samp>, y esta instrucción arrancaba en <samp>3BC03</samp>, significa que hay <samp>4 bytes</samp> de diferencia (o sea que esta instrucción ocupa 4 bytes en memoria). Lo siguiente no es tan obvio, pero hay que razonarlo: como estamos pasando un número a esta instrucción, el número <samp>35B0</samp>, que ocupa 2 bytes, nos quedan solo 2 bytes que tienen que ser lo que ocupa el código de instrucción."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Un proceso que se ejecuta en un sistema con memoria virtual puramente segmentada tiene un primer segmento de código de 4096 bytes. ¿Cuál es el valor del campo límite del correspondiente descriptor de segmento?",
                            "respuesta": "01000(16) = 0000 0001 0000 0000 0000(2)",
                            "explicacion": "Recordemos que el campo límite son 20 bits que definen qué tan largo es un segmento. Si este segmento tiene 4096 bytes, entonces el campo límite de este segmento debería tener el valor 4096 en binario."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Qué valor tiene el bit <samp>P</samp> de presencia cuando la CPU está ejecutando la tercera instrucción?",
                            "respuesta": "P=1",
                            "explicacion": "El bit de presencia es un flag que está en 1 cuando un segmento está cargado en memoria. El hecho de que se esté <em>ejecutando una instrucción</em> de dicho segmento, implica que tiene que estar cargado en memoria. El hecho de haber puesto 'tercera instrucción', es simplemente para despistar."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Si el valor del campo base correspondiente al mismo descriptor expresado en hexadecimal es <samp>00 00 10 00</samp>, ¿Cuál es la dirección física que correspondería al último byte del segmento?",
                            "respuesta": "00 00 1F FF",
                            "explicacion": "El campo base son 32 bits que definen en qué posición empieza un segmento. Si el segmento empieza en <samp>00 00 10 00</samp>, y el tamaño dijimos que era <samp>0 10 00</samp>, entonces <samp>00 00 10 00 + 0 10 00 = 00 00 20 00</samp>. Este <samp>00 00 20 00</samp> sería donde empieza el <strong>próximo segmento</strong>, por lo cual, el <strong>último byte del segmento que estamos calculando</strong> sería el byte previo a ése, es decir: <samp>00 00 1F FF</samp>."
                        }
                    ]
                }
            ]
        },
        {
            "descripcion": "Final 06/10/2016",
            "secciones": [
                {
                    "descripcion": "Teórico",
                    "enunciados": [
                        {
                            "enRevision": false,
							"pregunta": "¿Cómo se denomina la estructura de datos que se utiliza en determinadas ocasiones, para resguardar el contenido de los registros de CPU?",
                            "respuesta": "Pila o Stack."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cuál es el nombre genérico de la técnica para actualizar la memoria principal desde caché? ¿Cuál es la denominación particular cuando se escribe en MP al mismo tiempo que en caché?",
                            "respuesta": "El nombre de técnica para actualizar la memoria principal desde caché se denomina <strong>Política de Escritura</strong> (puede ser una de varias).<br>La técnica en particular para escribir en MP (memoria principal) al mismo tiempo que en caché es <strong>Escritura Inmediata</strong>"
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cuál es la finalidad de los 'registros de segmento' en modo real y en modo protegido?",
                            "respuesta": "En modo real contiene la base de alguna estructura de datos (como por ejemplo CS, SS, ó DS, entre otros). En modo protegido contiene el selector de dichos segmentos."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cómo se denomina el registro que actúa como 'contador de programa' o 'puntero de instrucción'? ¿De cuántos bits puede constar?",
                            "respuesta": "Se llama <strong>Instruction Pointer (IP)</strong> y consta de 16 bits cuando se usa el registro <samp>IP</samp> o puede tener 32 bits cuando se usa el registro <samp>EIP</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Dónde se encuentra el operando cuando se utiliza direccionamiento inmediato?",
                            "respuesta": "En la misma instrucción.<br>También es válido decir 'en el campo DATA'."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Qué es el Buffer de Traducción Anticipada y qué información se guarda en este dispositivo?",
                            "respuesta": "Es una memoria de capacidad reducida que guarda la dirección lineal y la dirección física de las últimas 32 páginas de código accedidas dentro de un microprocesador."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿En qué unidad se mide el ciclo completo de una instrucción?",
                            "respuesta": "En ciclos de reloj, en hertz, en hz..."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cómo se denomina la señal de respuesta de la CPU a la solicitud de atención por parte de un dispositivo externo? ¿Qué módulo especial gestiona las señales provenientes del entorno de dispositivos?",
                            "respuesta": "La señal es <samp>INTA</samp> (Interruption Acknowledge). Las gestiona el módulo APIC."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cómo se denomina el parámetro que indica la cantidad de bits que se transmiten por unidad de tiempo a través de un bus y en qué unidades se mide?",
                            "respuesta": "Velocidad de transferencia. Se mide en Megabit/s o Gigabit/s"
                        }
                    ]
                },
                {
                    "descripcion": "Práctica",
                    "enunciados": [
                        {
                            "enRevision": false,
							"pregunta": "Sabiendo que una CPU genera una dirección de 34 bits que permiten acceder a la memoria principal.<br>¿Cuál es el tamaño potencial de la memoria principal?",
                            "respuesta": "16GB",
                            "explicacion": "Podemos razonarlo de esta forma: Si las viejas máquinas de 32 bits permitían direccionar 4GB, entonces con un bit más (33 bits) podrían hacer 8GB, y entonces con otro bit más (34 bits) podrían hacer 16GB."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cuántos bits son significativos para direccionar una memoria DRAM de 8 Gigabytes?",
                            "respuesta": "33 bits.",
                            "explicación": "Tener en cuenta la explicación de la respuesta anterior."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Si el total de los 8 Giga están distribuidos en cuatro placas de 8 chips cada una ¿Cómo esta armada la matriz de mX8 en cada chip y cual es la capacidad de cada uno?",
                            "respuesta": "La matriz sería de 256MX8 y tendría una capacidad de 256MB cada una.",
                            "explicacion": "La capacidad es una cuenta matemática (8GB dividida en 4 placas da 2GB, y dice que cada placa tiene 8chips, entonce 2GB / 8 chips = 256MB).<br>La matriz de MX8 es la cantidad de <em>bloquecitos de 1 byte</em> que pueden haber."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Un proceso que se ejecuta en un sistema con memoria virtual puramente segmentada tiene un primer segmento de código de 4096 bytes. ¿Cuánto vale el campo el campo P de presencia cuando el programa está ejecutando la tercera instrucción?",
                            "respuesta": "El flag estaría <samp>P=1</samp>",
                            "explicacion": "El <strong>bit de presencia</strong> indica que un segmento está cargado en memoria. Como el enunciado dice que se está ejecutando una instrucción (no importa si es la tercera), significa que debería estar cargado en memoria."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Qué valor de la entidad “selector” de la dirección virtual permite acceder al segmento?",
                            "respuesta": "El Indice de Tabla (o TI), bit 2 del selector que esté en 0, indicando que la Tabla de Descriptores es Local."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Qué valor tiene el bit G de Granularidad?",
                            "respuesta": "El flag estaría en <samp>G=0</samp>",
                            "explicacion": "El <strong>flag de granularidad</strong> indica si el campo 'tamaño' se refiere a bytes o a páginas. Como el enunciado mismo decía que era una memoria puramente segmentada, significa que no estamos hablando de páginas, si no de los tamaños en bytes, por lo tanto, el flag G debería estar en 0."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Si la base alojada en su descriptor y expresada en hexadecimal es <samp>32 42 70 00</samp>. ¿Cuál es la dirección física que correspondería al último byte del segmento?",
                            "respuesta": "<samp>32 42 7F FF</samp>",
                            "explicacion": "Si el tamaño del segmento es de 4096 bytes (lo decía el enunciado), significa que el campo que indica el tamaño de segmento (20 bits) debe ser <samp>01000</samp> (en hexadecimal). La técnica que podemos usar para saber cuál es el último byte, es sumar el tamaño de segmento, con la base (<samp>32 42 70 00 + 0 10 00 = 32 42 80 00</samp>), lo cual nos da <strong>el primer byte del segmento próximo</strong>. Si restamos 1 a ese resultado, nos daría el último byte del segmento que estábamos calculando: <samp>32 42 7F FF</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Para la línea de código presentada a continuación<br><samp>AB55:0103 MOV AX, [AAAA]</samp><br>Si la instrucción siguiente a la descripta se aloja en la dirección física <samp>AB656</samp>, ¿Cuál es el tamaño de la instrucción y cuántos bytes le corresponden al código de operación?",
                            "respuesta": "3 bytes: 2 para el operando <samp>AAAA</samp> y el restante para el código de operación.",
                            "explicacion": "Calculamos la dirección física primero de lo que tenemos <samp>AB55 x 10 + 0103 = AB653</samp>. Si la próxima instrucción va a estar en <samp>AB656</samp>, significa que hay 3 bytes de diferencia. Como vemos que en la instrucción se están usando 2 bytes para representar el dato <samp>AAAA</samp>, sólo nos queda concluir que el byte restante es el <strong>código de operación</strong>."
                        }
                    ]
                }
            ]
        },
        {
            "descripcion": "Final 26/07/2016 (Tema 2)",
            "secciones": [
                {
                    "descripcion": "Teórico",
                    "enunciados": [
                        {
                            "enRevision": false,
							"pregunta": "Con dos o tres palabras como máximo indique qué es un elemento de un vector de interrupciones (considérelo en modo real)",
                            "respuesta": "Puntero a Rutina (Una dirección del tipo CS:IP)",
                            "explicacion": "En <strong>modo real</strong> las entradas del IDT (Tabla de Descriptores de Interrupción), poseen un CS y un IP que es el que va a determinar dónde está la rutina correspondiente a la interrupción que se produjo. En <strong>modo protegido</strong>, sin embargo, cada entrada es un descriptor de puerta que permite acceder al segmento donde se encuentra la rutina."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cuál es la relación entre el valor numérico asociado a dicho elemento y la interrupción o excepción?",
                            "respuesta": "Permite encontrar en el vector de interrupciones, la rutina especifica para esta excepción o interrupción."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿En qué dirección de memoria se almacena el primer byte de la IDT en modo real y qué registro apunta a dicha tabla en modo protegido?",
                            "respuesta": "En modo protegido es el IDTR (Registro de Tabla de Descriptores de Interrupción) el que apunta a dicha tabla. En modo real se ubica en el primer KB de la RAM, y el primer byte es 00 00 00 (Hexa).<br> <a class=\"btn btn-success\" href=\"https://www.tutorialspoint.com/microprocessor/microprocessor_8086_interrupts.htm\">Fuente</a>"
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Qué instrucciones assembler conoce que permitan desplazar a derecha bits en un registro?",
                            "respuesta": "<samp>SAR</samp> y <samp>SHR</samp>"
                        }
                    ]
                },
                {
                    "descripcion": "Verdadero o Falso",
                    "enunciados": [
                        {
                            "enRevision": false,
							"pregunta": "En un modo de direccionamiento directo para obtener el dato se accede a memoria una sola vez.",
                            "respuesta": "Verdadero.",
                            "explicacion": "Necesita ir a memoria y traer un dato para luego operarlo."
                        },
                        {
                            "enRevision": false,
							"pregunta": "El rango de direcciones de 16 bits es (-32768. +32767).",
                            "respuesta": "Falso. El rango de direcciones de 16 bits es (0; 65535).",
                            "explicacion": "Si bien el rango de valores es 65536 valores distintos, la pregunta es por las direcciones posibles, es decir, los números de 0 a 2^(n)-1."
                        },
                        {
                            "enRevision": true,
							"pregunta": "En una instrucción de una dirección un campo es el código de operación y el otro la referencia al dato (también puede ser el dato en modo de direccionamiento inmediato)",
                            "respuesta": "Falso. No necesariamente es <strong>una referencia</strong> a un dato. Al hacer <samp>JMP 10000h</samp>, utiliza la dirección para posicionarse en una cierta posición de memoria, pero no está yendo a buscar ningún dato."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Una instrucción con formato <samp>mnemónico reg, mem</samp> es una instrucción que requiere un acceso a memoria principal.",
                            "respuesta": "Falso.",
                            "explicacion": "Si el dato referenciado por <samp>mem</samp> está en la caché, no haría falta que acceda a memoria principal."
                        },
                        {
                            "enRevision": false,
							"pregunta": "La frecuencia indica la cantidad de ciclos por segundo y la unidad que la representa es el Hz.",
                            "respuesta": "Verdadero."
                        }
                    ]
                },
                {
                    "descripcion": "Práctica",
                    "enunciados": [
                        {
                            "enRevision": false,
							"pregunta": "Una memoria principal de 4MBytes opera con una caché de 64K líneas de 8 bytes cada una y utiliza correspondencia directa (asociativa de 1 vía).<br> ¿Qué estructura de parámetros en la dirección física interpretada por el controlador de caché le permite el acceso a ésta y cómo se distribuyen los bits de cada campo?",
                            "respuesta": "Usa la estructura <samp>[Bits de Etiqueta][Bits de Línea][Bits de Posición]. Son necesarios 22 bits de dirección física de los cuales usa 16 bits de línea, 3 bits de posición, y los restantes 3 bits para etiqueta.</samp>",
                            "explicacion": "Como es una Asociativa de 1 Vía, sabemos que su estructura siempre es [Etiqueta][Línea][Posición]. Luego, como la memoria es de 4MB, ya podemos saber que la estructura va a tener 22 bits de largo (4MB = 2^(22)). Como vemos que tiene 64K de líneas, también lo pasamos como potencia de 2 y nos da 2^16 (entonces se necesitarán 16 bits de línea). Luego decía que cada línea es de 8 bytes, es decir 2^3 (se necesitarán 3 bits de posición). Los bits de etiqueta son los bits restantes."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Para implementar una memoria de 256K x 16 usando chips de 16K x 8, indicar: ¿Cuántos chips se requieren?",
                            "respuesta": "32 chips",
                            "explicacion": "Se aplica la fórmula:<br> <samp>(256*16)/(16*8)=32</samp> <br> <a class=\"btn btn-success\" href=\"http://www.utnianos.com.ar/foro/tema-arquitectura-ayuda-ej-banco-de-memoria?pid=25287#pid25287\">Fuente</a>"
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cuántos bits se utilizan para direccionar una palabra dentro del chip?",
                            "respuesta": "14 bits",
                            "explicacion": "Como el chip tiene 16K de celdas (o posiciones), necesitamos 14 bits para generar todas esas posiciones."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cuántos bits se requieren para identificar el chip?",
                            "respuesta": "5 bits",
                            "explicacion": "Como hay 32 chips, se necesitan 2^5 combinaciones distintas, por eso se utilizan 5 bits. <br> <a class=\"btn btn-success\" href=\"http://www.utnianos.com.ar/foro/tema-arquitectura-ayuda-ej-banco-de-memoria?pid=25287#pid25287\">Fuente</a>"
                        },
                        {
                            "enRevision": true,
							"pregunta": "¿Cómo está formada la matriz de chips en filas por columnas?",
                            "respuesta": "16Kx2",
                            "explicacion": "Como tenemos las matrices 256K x 16 y 16K x 8, lo expresamos así (256K/16K) x (16/8) = 16 x 2<a class=\"btn btn-success\" href=\"http://www.utnianos.com.ar/foro/tema-arquitectura-ayuda-ej-banco-de-memoria?pid=25287#pid25287\">Fuente</a>"
                        },
                        {
                            "enRevision": true,
							"pregunta": "¿Cuál es el valor hexadecimal de la primera y la última dirección expresados en hexadecimal?",
                            "respuesta": ""
                        }
                    ]
                }
            ]
        },
        {
            "descripcion": "Final 26/07/2016 (Tema 1)",
            "secciones": [
                {
                    "descripcion": "Teórico",
                    "enunciados": [
                        {
                            "enRevision": false,
							"pregunta": "Al conjunto de bits que acceden por vez a memoria se lo denomina...",
                            "respuesta": "Palabra de Memoria."
                        },
                        {
                            "enRevision": false,
							"pregunta": "La característica de los buses con que medimos la cantidad de bits que se transmiten por unidad de tiempo se denomina [...] y se puede medir en [...]",
                            "respuesta": "Velocidad de transferencia y puede ser medido en MBits o Gbits."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Una aplicación que precise enviar y recibir datos de un dispositivo de E/S a memoria sin intervención del procesador utiliza un dispositivo...",
                            "respuesta": "De E/S Programada."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Un arreglo unidimensional cuya función es apuntar a la primera instrucción del servicio de atención de una interrupción se denomina...",
                            "respuesta": "<samp>IDTR</samp>",
                            "explicacion": "La tabla IDT tiene su propio registro que apunta a la base de dicha tabla y es <samp>IDTR</samp>. Cuando hacemos <samp>INT 4</samp> por ejemplo, se utiliza implícitamente el registro <samp>IDTR</samp> con desplazamiento <samp>4</samp>, por ejemplo."
                        },
                        {
                            "enRevision": false,
							"pregunta": "La segmentación-paginada obliga a que ambas unidades de la MMU estén activas para el <em>mapeo</em> de una dirección.",
                            "respuesta": "Verdadero. Son requeridas ambas unidades.",
                            "explicacion": "Es super rebuscada y mala leche esta pregunta, pero la MMU está formada por dos unidades la Unidad de Segmentación y la Unidad de Paginación. Cuando se mapea una dirección (por ejemplo, la CPU quiere información de la memoria principal), esta solicitud al recibirla la MMU primero se la pasa a la Unidad de Segmentación y luego a la Unidad de Paginación, recién ahí sabe cuál es la dirección física a la que debe dirigirse.<br> <a class=\"btn btn-success\" href=\"http://wiki.inf.utfsm.cl/index.php?title=Segmentaci%C3%B3n_y_ejemplos_de_utilizaci%C3%B3n#El_caso_Pentium\">Fuente</a>"
                        },
                        {
                            "enRevision": false,
							"pregunta": "El rango del exponente en el formato de doble precisión del IEEE es (-1023;+1024).",
                            "respuesta": "Falso. El rango es (-1022;+1023).",
                            "explicacion": "<a class=\"btn btn-success\" href=\"https://en.wikipedia.org/wiki/IEEE_floating_point#Basic_and_interchange_formats\">Fuente</a>"
                        },
                        {
                            "enRevision": false,
							"pregunta": "Una instrucción de 'llamada' o 'retorno' se clasifica como instrucción de salto o bifurcación.",
                            "respuesta": "Verdadero. Son instrucciones de salto (más específicamente 'de llamado a rutina')."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Una instrucción con formato <samp>mnemónico reg2, reg1</samp> es una instrucción que no requiere acceso a memoria principal.",
                            "respuesta": "Verdadero. Está utilizando únicamente registros."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Una cuádruple palabra es un tipo de dato que hace referencia a 64 bits.",
                            "respuesta": "Verdadero. Palabra son 2 bytes (16 bits), Cuádruple Palabra son 8 bytes (64 bits)."
                        }
                    ]
                },
                {
                    "descripcion": "Práctica",
                    "enunciados": [
                        {
                            "enRevision": false,
							"pregunta": "La siguiente secuencia de instrucciones forman parte de un programa en memoria en código máquina, su representación en assembler es la siguiente<br> <samp>3B45:0103 MOV AH, 10</samp><br> <samp>3B45:0106 MOV AH, 12</samp><br> Indicar dirección efectiva o física de la primer instrucción.",
                            "respuesta": "3B553",
                            "explicacion": "Fórmula para convertir a dirección física <samp>3B45 x 10 + 0103 = 3B553</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Modo de direccionamiento de las instrucciones y justificación.",
                            "respuesta": "Las dos son inmediatas ya que el operando se encuentra en la instrucción."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Decir cuál será el valor binario del acumulador al terminar de ejecutarse la 2da instrucción.",
                            "respuesta": "<samp>1100 0000 0000 0000</samp>",
                            "explicacion": "La respuesta es medio mágica porque la segunda instrucció sólo está modificando la parte alta del acumulador (AH es el primer byte de AX), y le está poniendo el valor <samp>1100</samp>. No sabemos cuánto valía su parte baja antes de ejecutar esa instrucción (tampoco está esa información en el enunciado), así que asumimos que la parte baja estaba en <samp>0000</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "La siguiente es la representación de los campos de una dirección física vista desde el controlador caché <br><samp>[Bits de Etiqueta][Bits de Línea][5 bits de identificador de byte]</samp> <br>La dirección física tiene en total 24 bits<br>Si la memoria caché tiene 64 líneas... Indicar la cantidad de bits para identificar la línea.",
                            "respuesta": "6 bits.",
                            "explicacion": "Como la memoria caché tiene 64 líneas, significa que se necesitan 64 valores distintos para diferenciarlos. Por lo tanto, necesitamos tantos bits para representar esos valores: 6 bits."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cuál es el tamaño de la memoria principal?",
                            "respuesta": "16MB",
                            "explicacion": "Lo determina la dirección física de 24 bits."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Qué tipo de correspondencia/mapeo se aplica?",
                            "respuesta": "Asociativa de 1 Vía",
                            "explicacion": "La dirección está dividida en Etiqueta - Línea - Posición. Si fuese totalmente asociativa sólo tendría Etiqueta-Posición. Si fuese asociativa de N vías tendría Etiqueta-Conjunto-Posición."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cuál es el tamaño de la línea de caché?",
                            "respuesta": "32 bytes",
                            "explicacion": "Lo define el campo posición. Como tenemos 5 bits, entonces vamos a tener 2^5 bytes, es decir 32 bytes."
                        },
                        {
                            "enRevision": true,
							"pregunta": "¿Cuál es el tamaño del bloque en memoria principal, si el bus de datos tiene 256 líneas y el bloque se transfiere en una sola ráfaga?",
                            "respuesta": ""
                        }
                    ]
                }
            ]
        },

        {
            "descripcion": "Final 01/03/2016",
            "secciones": [
                {
                    "descripcion": "Teórico",
                    "enunciados": [
                        {
                            "enRevision": false,
							"pregunta": "Indique en el procesador estudiado en el modo denominado 'protegido' si el procesador tiene acceso a memoria RAM de solo 4 Giga direcciones. En caso afirmativo indique la cantidad de bits de la dirección física. En caso negativo indique como esta constituida la dirección segmentada.",
                            "respuesta": "Si, tiene acceso a RAM de 4 Gigas de direcciones. Se necesitan 32 bits para generar dichas direcciones físicas."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Indique si es verdad que cuando un dispositivo externo avisa de una solicitud de atención sería posible que el programa actual continúe. En el caso que si continúe con el programa en curso indique que como la CPU lo determinaría, en caso que no continúe el programa en curso diga porqué.",
                            "respuesta": "Si, puede continuar. Si es una interrupción mascarable, puede continuar si el flag IF (Interruption Flag) se encuentra en 1."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Indique en que número hexadecimal queda representado el numero +127 en un formato de coma fija de 8 bits con negativos complementados a 2.",
                            "respuesta": "7F",
                            "explicacion": "El número 127 es en binario <samp>0111 1111</samp>, como estamos usando números enteros de 8 bits con negativos complementados a dos, significa que sólo podemos hacer uso de 7 bits para represenar número, y el más significativo va a ser el signo. En este caso el número 127 podemos representarlo en 7 bits, así que es un número representable en este formato, porque nos quedaría el bit más a la izquierda para poner su signo. Si pasamos <samp>0111 1111</samp> a hexa nos queda <samp>7F</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Indique como se denomina la memoria interna de un subsistema cache que puede accederse comparando un argumento con cada una de las filas de la matriz.",
                            "respuesta": "Memoria de Etiquetas.",
                            "explicacion": "Libro de Quiroga, Unidad 9.6, Página 217."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Si una RAM está constituida por 256 K marcos de página y el tamaño de la pagina es de 4K Bytes, cuál es el tamaño de la memoria RAM.",
                            "respuesta": "1GB",
                            "explicacion": "Es una cuenta matemática. Si tiene 256K frames de página y cada página tiene 4 KBytes... Nos da 1GByte."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Indique si es verdad que existen sólo dos registros del procesador que se utilizan para determinar el campo desplazamiento de una dirección virtual, cuando se accede a una estructura alojada en el segmento SS. Si es negativo justifique. Si es afirmativo indique cuales. ",
                            "respuesta": "Verdadero. Los registros son SP y ESP."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Indique con si o con no, si es verdad que un dato numérico de tipo palabra doble se almacena en RAM según la técnica LITTLE_ENDIAN. Si es negativo justifique. Si es positivo de un ejemplo numérico en hexadecimal con ambos valores",
                            "respuesta": "Si, en Big Endian AA BB CC DD, en Little Endian tendríamos DD CC BB AA.",
                            "explicacion": "El tipo 'palabra' (o WORD) son 2 bytes. 'Palabra doble' son 4 bytes. Lo que pregunta este enunciado es si es posible almacenar en formato little endian un número de 4 bytes. Recordemos que para hacer esto tenemos que tener tamaños que sean 'divisibles' en bytes. En el ejemplo que dimos, se ve bien que es posible 'dar vuelta' esa secuencia de bytes para que queden almacenados en Little Endian."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Si el rango de direcciones (expresado en hexadecimal) de una memoria de m*8 es 00-FF cuál es el valor de m?",
                            "respuesta": "256",
                            "explicacion": "Es una forma rebuscada de preguntar: ¿Cuántas posiciones puede tener esta memoria si el rango de direcciones es de <samp>00</samp> hasta <samp>FF</samp>?."
                        },
                        {
                            "enRevision": true,
							"pregunta": "Representación en potencias de dos del valor negativo a partir del cúal una operación con enteros de 128 bits da overflow",
                            "respuesta": "",
                            "explicacion": "No se entiende la pregunta. Pero parece dar por entendido que no hablamos de números enteros sin signo, si no de números enteros que contienen negativos también (Pero qué formato? Signados? Complementados a 2?)"
                        },
                        {
                            "enRevision": false,
							"pregunta": "Para establecer la condición de desigualdad entre dos operandos ¿Qué operación entre los dos operandos realiza la unidad de cálculo?",
                            "respuesta": "Resta (instrucción SUB)."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Qué bandera o banderas se consultan?",
                            "respuesta": "El flag Z (informa si el resultado de la última operación fue 0)."
                        }
                    ]
                },
                {
                    "descripcion": "Práctica",
                    "enunciados": [
                        {
                            "enRevision": false,
							"pregunta": "Teniendo el siguiente estado <br> <samp>AX=0000  BX=0001  CX=000A  DX=0000</samp><br><samp>SP=FFEE  BP=0000  SI=0000  DI=0000</samp><br> <samp>DS=1516  ES=1516  SP=FFEF CS=1516  IP=0100</samp><br> ¿Cuáles y con qué valor se modifican los registros indicados abajo si se ejecutan las siguientes instrucciones?<br> <samp>ADD AX, 0200</samp><br> <samp>SUB AX, FFFF</samp><br> <samp>PUSH AX</samp>",
                            "respuesta": "AX = 0200, AX=FDFF, SP=FFED",
                            "explicacion": "En el primer caso, simplemente añadimos 0200 al registro AX.<br> En el segundo caso restamos a AX el valor FFFF, por lo cual va a dar un desborde negativo, por eso queda FDFF (es el resultado de 0200 - FFFF).<br> En el tercer caso ponemos el valor de AX en la pila, por eso el puntero a pila decrementa 2 unidades (recordemos que en IA32 el puntero se mueve de a dos unidades)."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Las instrucciones <samp>MOV CX,DX</samp> y <samp>MOV DX,CX</samp> se representan en código de máquina como  <samp>89D1</samp> y <samp>89CA</samp> respectivamente.<br> Si el formato de la correspondiente cadena binaria de cada instrucción es:<br> <samp>[4bits de Verbo][6 bits de Modo de Direccionamiento][3bits registro fuente][3 bits registro destino]</samp> <br> Identifique el valor HEXADECIMAL correspondiente al verbo.",
                            "respuesta": "<samp>8</samp>",
                            "explicacion": "Si en la primer instrucción que está representada por el código máquina <samp>89CA</samp> pasamos todo a binario nos da el siguiente resultado:<br> <samp>1000 1001 1101 0001</samp><br> De los cuales el enunciado nos dice que los primeros 4 bits son el verbo <samp>1000</samp>. Si esto lo pasamos a hexa, nos da <samp>8</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Identifique el valor binario correspondiente a la identificación del registro CX y el correspondiente al registro DX",
                            "respuesta": "Registro Fuente es <samp>010</samp> y el Registro Destino es <samp>001</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Indique si el modo de direccionamiento en es indexado",
                            "respuesta": "Falso. Es directo por registro (va de registro a registro)."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Si se ejecutan consecutivamente cual es el valor final del registro",
                            "respuesta": "Ambos registros terminan con el valor <samp>0000</samp>."
                        }
                    ]
                }
            ]
        },

        {
            "descripcion": "Final 09/12/2015",
            "secciones": [
                {
                    "descripcion": "Teórico",
                    "enunciados": [
                        {
                            "enRevision": true,
							"pregunta": "Para la siguiente sentencia VECTOR(I)=3 indique por lo menos 2 registros de CPU que podrían estar implicados en el modo de direccionamiento de su correspondiente código máquina",
                            "respuesta": "<samp>DS</samp> (Segmento de Datos) y <samp>SI</samp> (Segmento de Índices)",
                            "explicacion": "El registro <samp>SI</samp> se utiliza para índices. Es probable que para apuntar a valores dentro de un vector sean necesarios los registros <samp>DS</samp> (segmento de datos) y un desplazamiento dado por <samp>SI</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Un registro de 32 bits almacena la siguiente información representada en hexadecimal <samp>80 AA 23 BB</samp>. Represéntela si es posible en notación Little-Endian, en caso contrario, indique su valor decimal considerando que representa información signada.",
                            "respuesta": "En Little-Endian es <samp>BB 23 AA 80</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Qué significa DRAM? Indique la ventaja o desventaja respecto de la memoria SRAM en relación a su capacidad de almacenamiento.",
                            "respuesta": "Significa <strong>Dynamic Random Access Memory</strong> y su ventaja es que pueden almacenar mucha más información que las SRAM."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cómo se denomina a la división lógica asociada a un disco magnético que establece la mínima cantidad de bytes que se acceden para leer o escribir?",
                            "respuesta": "Clúster"
                        },
                        {
                            "enRevision": false,
							"pregunta": "Nombre dos instrucciones assembler asociadas a CONSULTA de banderas. Nombre dos instrucciones que MODIFIQUEN banderas.",
                            "respuesta": "Consulta: <samp>JZ</samp> (salta a una instrucción si el flag Z es 0) y <samp>JC</samp> (salta a una instrucción si el flag de Carry es 1)<br>Modificación: <samp>CLC</samp> (clear carry, deja en 0 el flag de carry), <samp>ADD</samp> (al finalizar la suma actualiza varios flags como Z para saber si el resultado fue 0, o V para saber si hubo overflow)."
                        },
                        {
                            "enRevision": true,
							"pregunta": "¿Hay alguna consideración que contemplar antes de sustituir una página almacenada en RAM cuyo contenido es CODIGO? Justifique.",
                            "respuesta": "Que no sea el código en ejecución. Porque no habría forma de saber cuál es la próxima instrucción."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Durante la traducción de una dirección virtual a dirección física, la unidad de segmentación detecta que el valor del desplazamiento supera el campo límite del descriptor de segmento. ¿Qué ocurre entonces?",
                            "respuesta": "Falla de Segmentación ó <samp>SEGMENTATION FAULT</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿En cuántos frames queda dividida una memoria de 1GB si el tamaño de una página es de 4KB?",
                            "respuesta": "En 256K de páginas.",
                            "explicacion": "Si pagamos los GB a KB nos da 1.048.576KB, y si estos KB los dividimos por 4KB, nos da 262144 frames. O más simple: 256K de frames."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cómo se denomina el bloque de lógica que permite encauzar la información de una única vía de entrada en 2^n líneas de salida?",
                            "respuesta": "Demultiplexor",
                            "explicacion": "Una forma de recordar memotécnicamente ésto es que acá hablamos de una vía sola, que se 'separa' en muchas (de-multiplexar, vendría a ser algo así como <em>separar</em> o <em>ramificar</em>)."
                        }
                    ]
                },
                {
                    "texto": "Teórico",
                    "enunciados": [
                        {
                            "enRevision": false,
							"pregunta": "Observe el contetnido de los siguientes registros de CPU y responda las consignas<br> <samp>CX=000A BX=0B0A IP=0008 CS=0032 SS=0090 SP=4532</samp><br> ¿Cuál es el valor del registro <samp>CX</samp> luego de la ejecución de una instrucción <samp>SAR CL</samp>?",
                            "respuesta": "<samp>00 05</samp>, no afecta ninguna bandera.",
                            "explicacion": "<samp>SAR</samp> es <em>Shift Arithmetic Right</em>, o <em>Desplazamiento Aritmético a Derecha</em>. Lo que hace es mover todos los bits a la derecha a excepción del bit más significativo (o sea, el que está más a la izquierda, lo deja intacto). Si hubiese un número en el bit menos significativo (el que está más a la derecha) lo pone en el flag de carry. Pero también hay que tener en cuenta que <samp>SAR</samp> no lo está aplicando en el registro <samp>CX</samp> si no en <samp>CL</samp> (es decir en la parte baja, o últimos 2 bytes). Por lo cual el número que vamos a operar es <samp>0A = 0000 1010</samp>. Si movemos todos los bits a la derecha, nos queda <samp>0000 0101</samp>, y como antes de la operación, el menos significativo era <samp>0</samp>, entonces no se modifica el flag de carry."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Si este es el estado de los registros de CPU en un momento dado, ¿Cuál es el valor de la dirección segmentada que apunta al byte vacío de la pila?",
                            "respuesta": "La dirección segmentada que apunta al byte vacío de la pila es <samp>0090:4532</samp>.",
                            "explicacion": "Recordemos que el Stack Pointer siempre apunta al byte vacío de la pila, y que la forma de dirección segmentada es <samp>Base del Segmento : Desplazamiento</samp>, que para el caso particular de la Pila (o Stack) son los registros <samp>SS</samp> y <samp>SP</samp>, así que el valor sería <samp>SS:SP</samp>, entonces en este caso <samp>0090:4535</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Si consideramos datos enteros signados para <samp>BX</samp> y <samp>CX</samp>, ¿Cuál es el valor final de <samp>BX</samp> luego de la ejecución de la instrucción <samp>SUB BX, CX</samp>?",
                            "respuesta": "<samp>BX=0B00</samp>",
                            "explicacion": "La instrucción <samp>SUB</samp> resta el primer registro con el segundo y guarda el resultado en el primer registro. Para este caso tenemos los valores de <samp>BX=0B0A CX=000A</samp> entonces la resta es <samp>0B0A - 000A = 0B00</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Considerando el valor actual del registro <samp>CX</samp> indique cuántas veces la instrucción <samp>LOOP</samp> decrementa el registro hasta que se sale de la estructura repetitiva.",
                            "respuesta": "10 veces.",
                            "explicacion": "Recordemos que <samp>LOOP</samp> funciona como <samp>JMP</samp> (salta a una instrucción), pero, primero se fija si <samp>CX</samp> es mayor que 0. Si es así, lo decrementa en 1, y luego salta. Si es 0, no salta. Es importante recordar que a ese registro se le llama Registro Contador, quizás eso sea una buena pista para recordarnos que tiene este vínculo con <samp>LOOP</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Represente el número +1 en enteros signados formato palabra, y en punto flotante de precisión simple. En ambos casos exprese su respuesta en hexadecimal.",
                            "respuesta": "Entero Signado (Formato Palabra): <samp>00 01</samp><br>Punto Flotante de Precisión Simple: Es 1x10^0 entonces <samp>3F 80 00 00</samp>",
                            "explicacion": "El formato palabra es con 2 bytes. Así que el número 1 positivo lo representamos <samp>00 01</samp> (es un 1, con muchos 0 adelante).<br> Para el otro formato, que es también conocido como Exceso-127, utiliza 4 bytes. Lo que tenemos que hacer es primero expresarlo como notación científica <samp>1x10^0</samp>. Con esto ya podemos ver el exponente (0), y su mantisa (en este caso también 0, porque es un número entero). Recordamos que el formato de Exceso-127 es:<br> Primer bit es de signo, los próximos 8 bits son la característica, y el resto de los bits son la mantisa.<br> Calculamos la característica con su fórmula <samp>Característica = Exponente + 127</samp>, lo cual da <samp>Característica = 127 = 0111 1111</samp>.<br> Entonces tenemos primer bit <samp>0</samp>, luego viene <samp>0111 1111</samp> y luego la mantisa que serían 23 bits en <samp>0</samp>. Con lo cual queda <samp>0011 1111 1000 0000 0000 0000 0000 0000</samp> o más lindo de expresar en hexa <samp>3F 80 00 00</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Para la línea de código presentada a continuación<br> <samp>AB55:0103 INT 2</samp> // Se genera el código máquina <samp>CD02</samp><br> ¿Con qué asocia el número (en este ejemplo el 2) en relación a la IDT o Tabla de Vectores de Interrupción? Infiera el código de instrucción para la interrupción <samp>INT 3</samp>",
                            "respuesta": "Es el índice en el que se encuentra la entrada para tratar esta interrupción en la IDT.<br> El código para <samp>INT 3</samp> es <samp>CD03</samp>.",
                            "explicacion": "La IDT es una tabla (o vector) cuyas entradas tienen el tratamiento para determinadas interrupciones. Si se usa el valor 2, entonces usará la entrada 2 de dicho vector para tratar la interrupción. en el código máquina generado <samp>CD02</samp> es de esperar que el último byte <samp>02</samp> sea el número que estamos usando en la instrucción, de lo que se deduce que <samp>CD</samp> parece ser el código de operación. Por lo cual es de imaginar que para <samp>INT 3</samp> el código máquina va a ser <samp>CD03</samp> (código de operación y el número 3)."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Exprese verbalmente (no numéricamente) a qué dirección se salta debido a la ejecución de esta instrucción.",
                            "respuesta": "<em>Aclaración: No queda claro si se refiere a qué instrucción se ejecuta en ese momento, o al volver de la rutina de interrupción.</em><br> Si es al volver de la rutina de interrupción: A la instrucción siguiente. <br> Si es al ejecutarse esa instrucción: A la rutina de tratamiento de esta interrupción que esté determinada por la IDT."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Relacionando la cantidad de bytes del código de máquina de ésta instrucción indique la dirección segmentada de la instrucción a la que se retorna luego de la ejecución del <samp>IRET</samp>.",
                            "respuesta": "<samp>AB55:0105</samp>",
                            "explicacion": "La instrucción ocupa 2 bytes (es el código máquina generado), y como vemos que el Puntero de Instrucción vale <samp>0103</samp>, entonces, al sumarle 2 nos da que el Puntero de Instrucción ahora vale <samp>0105</samp>. Así que si lo expresamos como dirección segmentada nos queda <samp>CS:IP</samp> el cual para este caso es <samp>AB55:0105</samp>."
                        }
                    ]
                }
            ]
        },

        {
            "descripcion": "Final 28/07/2015",
            "secciones": [
                {
                    "descripcion": "Teórico",
                    "enunciados": [
                        {
                            "enRevision": false,
							"pregunta": "¿Cómo se denomina la estructura de dato en cuyos elementos se puede encontrar el puntero al driver de dispositivo?",
                            "respuesta": "Tabla de Vectores de Interrupción",
                            "explicacion": "Para hacer uso de algún dispositivo de E/S (como usar un driver), el programa en ejecución debe hacer una interrupción de software con la instrucción <samp>INT #</samp> donde # es el número de interrupción que está asociada a dicho servicio de E/S. Fuente: Unidad 8.9 del Libro de Quiroga (Página 192)."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cuál es la finalidad de los registros base en modo real y protegido?",
                            "respuesta": "Sirve para direccionamiento dentro de un segmento.",
                            "explicacion": "Recordemos que si bien el direccionamiento físico está dado por <samp>Dirección de Segmento + Desplazamiento</samp>, también se le pueden agregar dos elementos más <samp>Dirección de Segmento + Dirección Base + Índice + Desplazamiento</samp>. El registro <samp>BX</samp> (registro base) en este caso sirve para direccionamiento base <em>dentro de un segmento</em>.<br> Fuente: Libro de Quiroga Unidad 8.6.1.5 'Relación entre los registros y el modo de direccionamiento a datos' (Página 187)"
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cuál es el criterio que sustenta la alta probabilidad de acierto de una instrucción en caché basado en la probabilidad de que la próxima instrucción a ejecutarse es gemeralmente la siguiente?",
                            "respuesta": "Vecindad Temporal y Espacial."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Indique una unidad del procesador asociada a la operatoria de un número real. Indique por lo menos una de sus posibles condiciones de error.",
                            "respuesta": "FPU (Unidad de Punto Flotante), puede provocarse un overflow o underflow."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Memoria ultrarrápida que guarda las direcciones de las últimas 32 páginas de código accedidas.",
                            "respuesta": "TLB (Buffer de Traducción Anticipada)"
                        },
                        {
                            "enRevision": false,
							"pregunta": "Método de escritura desde caché que actuliza la información cuando el bus está disponible.",
                            "respuesta": "Escritura Diferida"
                        },
                        {
                            "enRevision": false,
							"pregunta": "Indique cuatro datos que deben almacenarse en un disco relacionados con la administración del sistema de archivos y que en general se encuentra en el sector de arranque.",
                            "respuesta": "Número de bytes por sector. Cantidad de sectores por cluster. Cantidad de sectores por pista. Cantidad de cabezas lectograbadoras.",
                            "explicacion": "Unidad 9.9 del Libro de Quiroga 'Administración de Memorias Externas' (Página 249)"
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿En qué TIPO/S de segmento/S tiene sentido el atributo que determina que debe ser escrito antes de ser sustituído?",
                            "respuesta": "En los que no son Segmentos de Código.",
                            "explicacion": "En un final de 2014 hacían la pregunta inversa: en qué tipo de segmento <strong>NO</strong> tiene sentido ese atributo, y la respuesta era 'En los Segmentos de Código'. <br> <a class=\"btn btn-success\" href=\"http://www.utnianos.com.ar/foro/tema-aporte-final-de-arquitectura-16-02-16-resuelto?pid=436486#pid436486\">Fuente</a>"
                        },
                        {
                            "enRevision": false,
							"pregunta": "Término usual (en inglés) del tiempo de cambio de cabeza lectora o grabadora en un disco de HDD",
                            "respuesta": "Switch",
                            "explicacion": "Pregunta super rebuscada y mala leche (en las 372 páginas del Libro Quiroga, sólo es mencionada 2 veces esa palabra). <br> Fuente: Libro de Quiroga, Unidad 12.2.3.2 (Página 293)"
                        }
                    ]
                },
                {
                    "descripcion": "Práctica",
                    "enunciados": [
                        {
                            "enRevision": true,
							"pregunta": "Sabiendo que una instrucción tiene un campo de referencia a memoria de 64bits... ¿Cuántos bits deben tener los registros de cálculo si se admite el modo de direccionamiento inmediato? ¿Por qué?",
                            "respuesta": ""
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿A cuántas direcciones de memoria se puede referenciar? ¿Cuál es el rango de direcciones expresado en potencias de 2?",
                            "respuesta": "Con 64 bits podemos referenciar a 2^64 direcciones y el rango es [0; +2^(64) - 1]"
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cuántas direcciones de memoria determina? (Expresados en Giga y Tera)",
                            "respuesta": "2^34 Gigas y 2^24 Teras.",
                            "explicacion": "Como tenemos 2^64, y sabemos que con 30 bits tenemos 1GB, podemos dividirlo para tenerlo expresado en Gigas <samp>(2^64) / (2^30) = (2^34) Gigas</samp>. <br> Un Tera se expresa como 2^40, así que aplicando el mismo razonamieno obtenemos: <samp>(2^64) / (2^40) = (2^24) Teras</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Un proceso se ejecuta en un sistema con memoria virtual con segmentos. ¿Cuántas páginas utiliza si el segmento de código es de 8193 bytes, el de datos es de 1125 bytes y la estructura de pila está definida como de 64 bytes?",
                            "respuesta": "3 para el segmento de código, 1 para el de datos y 1 para el de pila [Páginas]",
                            "explicacion": "Recordemos que en el modelo de segmentación paginado se usa la memoria de a <em>bloquecitos</em> de memoria los cuales son segmentos (no olvidemos que los segmentos tienen <strong>tamaño variable</strong>) que están conformados a su vez por páginas (las cuales recordemos que tienen <strong>tamaño fijo</strong>). El tamaño de estas páginas es de 4Kbytes, por lo cual, cada segmento <em>sólo puede crecer de a 4Kbytes</em> cada vez que sea necesario, pero por esta limitación (que las páginas siempre tienen 4Kbytes), un segmento no puede ser inferior a 4Kbytes (es decir, cuando un segmento sólo tiene 1 página). Para este caso particular podemos ver que el primer segmento es de 8193 bytes, para meter esto en un segmento, tendríamos que ver cuántas páginas harían falta. Obviamente no entra en una página (que tiene 4096 bytes), ni tampoco en dos páginas (8192 bytes) y sólamente por ese byte que nos falta, tenemos que utilizar una página más para poder meter todos esos 8193 bytes en el segmento (por lo cual el segmento queda conformado por 3 páginas). Luego, el de 1125 bytes ocupa un segmento de una página (su tamaño es inferior a 4096bytes) y finalmente la pila de 64 bytes también entra en un segmento de una página."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cuántos KBytes ocupa la imagen virtual?",
                            "respuesta": "20 KB",
                            "explicacion": "Esta pregunta viene en relación a lo anterior. Estamos utilizando 3 segmentos, el cual el primero tiene 3 páginas, el segundo 1 página y el último 1 página. Esto nos da 5 páginas en total. Como sabemos que las páginas tienen 4KBytes, entonces, estamos ocupando 20Kbytes de información (aún cuando no estén en uso todos esos bytes, ya están <em>reservados</em> (si se quiere decir) por esos segmentos paginados)."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Qué atributos del segmento indican que está paginado, que fue modificado, que es de dato y que es de pila? (No exprese las siglas si no los términos que representan)",
                            "respuesta": "El atributo (bit ó flag) de Granularidad indica que el segmento está dividido en páginas.<br> El atributo de tipo nos dice si es de código, dato o pila. <br> Por otra parte, en la tabla de páginas, el flag de Bit Sucio (Dirty Bit) es el que informa que una página fue modificada (no hay flags ni atributos que indiquen que un segmento en particular fue modificado)."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Si se han cargado en el área local el segundo segmento de código, el de datos y la pila, ¿Cuánta memoria se ocupó?",
                            "respuesta": "12288 bytes ó 12 kilobytes",
                            "explicacion": "Está tan mal redactada la pregunta de este final que es imposible de entender a qué se refiere. Pero cuando dice 'segundo segmento de código' creo que se refiere a la 'segunda página' (porque hay un sólo segmento de código mencionado en todo el final).<br> Como recordamos, la segunda página del segmento de código tenía 4096 bytes, luego dice que también se cargan el segmento de datos (recordamos que tenía 1125bytes) y el de pila (64 bytes). En este caso, para cada segmento vamos a tener 1 página para cada uno, porque cada uno tiene 4096 bytes o menos, así que con una página para cada uno podemos contener cada segmento. Esto da como resultado 3 páginas en total, y como las páginas siempre son de 4KBytes, que la memoria total ocupada es 12Kbytes."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Indique las instrucciones de transferencia de control para un salto incondicional, una interrupción, un salto a procedimiento (el punto es válido si están todas las instrucciones necesarias).",
                            "respuesta": "<samp>JMP</samp>, <samp>INT n</samp> y <samp>CALL</samp>"
                        },
                        {
                            "enRevision": false,
							"pregunta": "Indique a qué instrucción se vuelve luego de una excepción de tipo Trampa y Falta (Con evento recuperable).",
                            "respuesta": "Cuando es Trampa a la siguiente instrucción. Cuando es Falta a la misma instrucción."
                        }
                    ]
                }
            ]
        },

        {
            "descripcion": "Final 14/07/2015",
            "secciones": [
                {
                    "descripcion": "Teórico",
                    "enunciados": [
                        {
                            "enRevision": false,
							"pregunta": "Indique el modo de direccionamiento necesario para inicializar una variable.",
                            "respuesta": "Direccionamiento Inmediato",
                            "explicacion": "Si pensamos fuera de los términos de assembler, recordaremos que para inicializar una variable necesitamos <strong>un valor</strong>. En el caso de assembler, cuando hablamos de valores en la misma instrucción, siempre estamos hablando de direccionamiento inmediato (es cuando el operando está en la misma instrucción)."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cuál es la finalidad de los 'registros índice' en modo real y en modo protegido?",
                            "respuesta": "Usar direccionamiento indexado.<br>Trabajar con cadenas de caracteres."
                        },
                        {
                            "enRevision": true,
							"pregunta": "¿Cuál es el criterio que sustenta la alta probabilidad de acierto en una serie de instrucciones cache basado en la probabilidad de que el código de un ejecutable seguramente utiliza estructuras repetitivas?",
                            "respuesta": "Especulación"
                        },
                        {
                            "enRevision": false,
							"pregunta": "La unidad del procesador asociada al intercambio de información con el bus (BIU), indique por lo menos una de sus funciones.",
                            "respuesta": "Transfiere datos, recibe datos, coloca direcciones, etc",
                            "explicacion": "En Pentium recordemos que el BUS no sólo se utiliza para transferir datos (operandos o instrucciones de la memoria) si no también para transferir direcciones. Podemos pensarlo como 'las autopistas' por donde se comunican los distintos módulos de una computadora (CPU con el Controlador de Caché, con la Memoria Principal, periféricos de E/S, etc...)"
                        },
                        {
                            "enRevision": false,
							"pregunta": "Memoria ultrarrápida que guarda la direcciones de las últimas 32 páginas de código accedidas",
                            "respuesta": "TLB (Tabla de Traducción de Direcciones Lineales)."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Exprese en Assembler el par de instrucciones relacionadas con el salto y retorno a un servicio de atención de interrupción.",
                            "respuesta": "<samp>INT n</samp> (Interruption N) y <samp>IRET</samp> (Interruption Return)."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Represente los números binarios enteros signados de 3 bits para los números -7, +4, +2, -1 considere negativos de punto fijo en C2.",
                            "respuesta": "-7 no se puede representar.<br>+4 no se puede representar.<br>+2 es <samp>010</samp>.<br>-1 es <samp>111</samp>.",
                            "explicacion": "Como sólo tenemos 3 bits <em>para hacer maniobras</em>, y los negativos se representan con complemento a 2 (todo esto lo dice el enunciado), podemos representar los números entre -4 y 3."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Luego de una operación aritmética entre enteros signados se ha puesto en 1 la bandera V indicando condición de overflow. Justifique el motivo por el cual los números son de igual signo.",
                            "respuesta": "Cuando los operandos tienen el mismo signo y el resultado da signo contrario, es porque se realizó una suma. Si es una resta, deberían ser operandos de distinto signo."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿A qué se denomina el tiempo de búsqueda o Seek time y a qué el Tiempo de latencia?",
                            "respuesta": "Seek Time es el tiempo que tarda un cabezal en llegar a la pista requerida desde su pista actual, y el Tiempo de Latencia es el tiempo que tarda en llegar hasta el sector que necesita leer una vez que está en la pista correcta."
                        }
                    ]
                },
                {
                    "descripcion": "Práctica",
                    "enunciados": [
                        {
                            "enRevision": false,
							"pregunta": "Para el siguiente código Assembler teniendo en cuenta el valor inicial de los registros y si se ejecuta la instrucción <samp>ADD AX, BX</samp> responder las preguntas a continuación:<br><samp>AX=001A BX=001C CX=001D DX=0000 SP=003C BP=0300 SI=0002 DI=0000</samp><br><samp>DS=0050 ES=0C98 SS=0060 CS=0400 IP=0103 NV UP EI PL NZ NA PO NC</samp><br>Indicar el valor de AX luego de la ejecución de la instrucción.",
                            "respuesta": "<samp>0036</samp>",
                            "explicacion": "La instrucción <samp>ADD</samp> suma el valor del segundo operando hacia el primer operando."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Cuál es la dirección segmentada y física para acceder a la próxima instrucción si la actual ocupa 3 bytes.",
                            "respuesta": "Segmentada:<samp>0400:0106</samp> <br>Física: <samp>04103</samp>",
                            "explicacion": "Recordemos que la próxima instrucción a ejecutarse está dada por <samp>CS:IP</samp>. En este caso reemplazando por sus valores queda <samp>0400:0103</samp>. Esa es la dirección segmentada. Luego, para calcular la dirección física aplicamos la ya conocida fórmula <samp>Segmento * 10 + Desplazamiento</samp>, así que tendríamos en nuestro caso <samp>0400 * 10 + 0103</samp> lo cual da <samp>04103</samp>, esa es la dirección física."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Dada la siguiente instrucción <samp>SUB AX, CX</samp>, cuál será el valor del registro destino después de la ejecución del punto 1.",
                            "respuesta": "0019",
                            "explicacion": "Recordemos que en el punto 1 el registro <samp>AX</samp> quedó en 0036. La instrucción <samp>SUB</samp> resta valor del segundo operando al primer operando (que es un registro). Así que tendríamos que <samp>0036</samp> menos el valor de <samp>CX</samp> que es <samp>001D</samp>."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Convierta la instrucción del punto anterior a un modo de direccionamiento 'Indirecto por registro'",
                            "respuesta": "<samp>SUB AX, ((CX))</samp>",
                            "explicacion": "Cuando hablamos de 'directo' e 'indirecto' hay que recordar que implican accesos a memoria principal. En este caso es indirecto porque estamos dando una posición de memoria cuyo contenido es la posición donde está el contenido que buscamos. El libro de Quiroga utiliza esa sintaxis de <samp>((registro))</samp>"
                        },
                        {
                            "enRevision": false,
							"pregunta": "En una unidad de disco 10 cabezas lecto/grabadoras describen 18000 Círculos concéntricos en el soporte.<br> a) Cuántas superficies grabables hay; b) ¿Cómo se denominan los círculos concéntricos?",
                            "respuesta": "Hay 10 superficies grabables (si hay 10 cabezales, hay 10 superficies o caras distintas). Los círculos concéntricos se llaman pistas."
                        },
                        {
                            "enRevision": false,
							"pregunta": "¿Cuántos cilindros se describen?",
                            "respuesta": "1800.",
                            "explicacion": "Los cilindros serían las pistas puestas 'una arriba de otra', formando justamente una figura cilíondrica"
                        },
                        {
                            "enRevision": false,
							"pregunta": "Para una memoria de palabra de 8 bits, indicar a cuantos bytes se pueden acceder con una dirección física de 31 bits.",
                            "respuesta": "2GB",
                            "explicacion": "Si tenemos 31 bits, y utilizamos 8 bits para cada byte, nos quedan 2GB (2^(31))."
                        },
                        {
                            "enRevision": false,
							"pregunta": "Indique las instrucciones de transferencia de control para: Un salto incondicional, una interrupción, un salto a procedimiento (el punto es válido si están todas las instrucciones necesarias)",
                            "respuesta": "Incondicional: <samp>JMP</samp><br>Interrupción: <samp>INT n</samp><br>Salto a Procedimiento: <samp>CALL</samp>"
                        },
                        {
                            "enRevision": false,
							"pregunta": "Indique a que instrucción se vuelve luego de una excepción de tipo:<br>Trampa<br>Falta (con evento recuperable):",
                            "respuesta": "Para Falta a la misma instrucción. Para Trampa, a la instrucción siguiente."
                        }
                    ]
                }
            ]
        }
    ]
}
